{
  "paragraphs": [
    {
      "text": "%md\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" />\n\n# Importing Data and Running Queries\nThis notebook introduces you importing data into your Splice Machine database and running a simple query, in these steps:\n\n1. *Creating and Populating an Example Table*\n2. *Running database queries from a Zeppelin notebook*\n3. *Using `Explain Plan`* to explore the execution plan for a query ",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 07:23:09.361",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" />\n<h1>Importing Data and Running Queries</h1>\n<p>This notebook introduces you importing data into your Splice Machine database and running a simple query, in these steps:</p>\n<ol>\n  <li><em>Creating and Populating an Example Table</em></li>\n  <li><em>Running database queries from a Zeppelin notebook</em></li>\n  <li><em>Using <code>Explain Plan</code></em> to explore the execution plan for a query</li>\n</ol>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542402377078_-2120810033",
      "id": "20170907-071443_970035831",
      "dateCreated": "2018-11-16 13:06:17.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## 1. Create and Populate our Example Table\nFirst we'll create a schema named `ADMIN`, make it the default schema, and then create and populate the `import_example` table with some simple data. For additional information about importing this data, see the [*Importing Data*](/#/notebook/2DVR1D5BP) notebook in our *Beginning Developers* course.\n\nClick the  <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> *Run* button in the  the next paragraph to create and populate the table:\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 07:24:28.558",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "tableHide": false,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>1. Create and Populate our Example Table</h2>\n<p>First we&rsquo;ll create a schema named <code>ADMIN</code>, make it the default schema, and then create and populate the <code>import_example</code> table with some simple data. For additional information about importing this data, see the <a href=\"/#/notebook/2DVR1D5BP\"><em>Importing Data</em></a> notebook in our <em>Beginning Developers</em> course.</p>\n<p>Click the <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> <em>Run</em> button in the the next paragraph to create and populate the table:</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543535573982_577744232",
      "id": "20181129-235253_1744227870",
      "dateCreated": "2018-11-29 23:52:53.982",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%splicemachine\n\nCREATE TABLE admin.import_example (i int, v varchar(20), t timestamp);\n\ncall SYSCS_UTIL.IMPORT_DATA('ADMIN','import_example',null,'s3a://splice-examples/import/example1.csv',null,null,null,null,null,0,null,null,null);\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-03 01:06:31.399",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "rowsImported": "string",
                      "failedRows": "string",
                      "files": "string",
                      "dataSize": "string",
                      "failedLog": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "rowsImported": "string",
                      "failedRows": "string",
                      "files": "string",
                      "dataSize": "string",
                      "failedLog": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/sql",
        "tableHide": false,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542847672383_-1353901299",
      "id": "20181121-164752_642828429",
      "dateCreated": "2018-11-21 16:47:52.383",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Running a Simple SQL Statement\n\nSplice Machine supports ANSI SQL. Our example query uses an SQL `SELECT` statement to select records from the table we created in the previous paragraph. \n\nThis query selects all records in the `import_example` table that have `100` as the value of column `i`; try it by clicking the  <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> *Run* button in the  the next paragraph.\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 07:25:11.592",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Running a Simple SQL Statement</h2>\n<p>Splice Machine supports ANSI SQL. Our example query uses an SQL <code>SELECT</code> statement to select records from the table we created in the previous paragraph. </p>\n<p>This query selects all records in the <code>import_example</code> table that have <code>100</code> as the value of column <code>i</code>; try it by clicking the <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> <em>Run</em> button in the the next paragraph.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542847666771_1824706086",
      "id": "20181121-164746_1602058755",
      "dateCreated": "2018-11-21 16:47:46.771",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%splicemachine\n\nselect * from admin.import_example\nwhere i = 100",
      "user": "anonymous",
      "dateUpdated": "2018-12-03 01:06:56.611",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 84.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "I": "string",
                      "V": "string",
                      "T": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "fontSize": 9.0,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542402377079_-600675295",
      "id": "20170916-185904_635367698",
      "dateCreated": "2018-11-16 13:06:17.000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Exploring Query Execution Plans\n\nIf you have a query that is not performing as expected, you can run the `explain` command to display the execution plan for the query.\n\nAll you need to do is put `EXPLAIN` in front of the query and run that. This generates the plan, but does not actually run the query. Try it by clicking the  <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> *Run* button in the next paragraph.",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 07:25:22.955",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Exploring Query Execution Plans</h2>\n<p>If you have a query that is not performing as expected, you can run the <code>explain</code> command to display the execution plan for the query.</p>\n<p>All you need to do is put <code>EXPLAIN</code> in front of the query and run that. This generates the plan, but does not actually run the query. Try it by clicking the <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> <em>Run</em> button in the next paragraph.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542402377081_-390549944",
      "id": "20170907-075704_344012816",
      "dateCreated": "2018-11-16 13:06:17.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%splicemachine\n\nexplain select * from admin.import_example a, admin.import_example b\nwhere a.i = 100",
      "user": "anonymous",
      "dateUpdated": "2018-12-03 01:07:18.940",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "results": {},
        "enabled": true,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542402377082_-670754914",
      "id": "20170916-190855_22811088",
      "dateCreated": "2018-11-16 13:06:17.000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Some Explain Plan Details\n\nTo see the execution flow of a query, look at the generated plan from the *bottom up.*  The very first steps of the query are at the bottom, then each step follows above. \n\nEach row includes the action being performed (a Scan, Join, grouping, etc.) followed by:\n\n<table class=\"splicezepNoBorder\">\n    <col />\n    <col />\n    <tbody>\n        <tr>\n            <td><em>n count</em></td>\n            <td>The step of the plan (and again you can see as we go from the bottom up the count starts from 1 and goes up from there)</td>\n        </tr>\n        <tr>\n            <td><em>totalCost</em></td>\n            <td>The estimated cost for this step (and any substeps below it)</td>\n        </tr>\n        <tr>\n            <td><em>scannedRows (for Table or Index Scan steps)</em></td>\n            <td>The estimated count of how many rows need to be scanned in this step</td>\n        </tr>\n        <tr>\n            <td><em>outputRows</em></td>\n            <td>The estimated count of how many rows are passed to the next step in the plan</td>\n        </tr>\n        <tr>\n            <td><em>outputHeapSize</em></td>\n            <td>The estimated count of how much data is passed to the next step in the plan</td>\n        </tr>\n        <tr>\n            <td><em>partitions</em></td>\n            <td>The estimated number of (HBase) regions are involved in that step of the plan</td>\n        </tr>\n        <tr>\n            <td><em>preds</em></td>\n            <td>Which filtering predicates are applied in that step of the plan</td>\n        </tr>\n    </tbody>\n</table>\n\nWe will see that the scannedRows and outputRows are key numbers to monitor as we tune query performance.\n\nIn the *explain* example that we just ran, we can see we are scanning table `import_example` twice, then joining them with a particular strategy; in this case, the strategy is a nested-loop join.\n\n### Which Engine?\nThe final steps, `Scroll Insensitive` and `Cursor` are typical end steps to the query execution.  There is one __very important__ piece of information shown on the `Cursor` line at the end:\n\n    Cursor(n=5,rows=360,updateMode=, engine=control)\n\nThis line shows you which *engine* is used for the query. The engine parameter indicates which engine Splice Machine plans to use. \n\n<div class=\"noteIcon\">\n<p>As you may know, Splice Machine is a dual-engine database:</p>\n<ul style=\"margin-bottom:0; padding-bottom:0\">\n<li>Fast-running queries (e.g. those only processing a few rows) typically get executed on the <code>control</code> side, directly in HBase.</li>\n<li>Longer-running queries or queries that process a lot of data go through <code>Spark</code>.</li>\n</ul>\n</div>\n\nWe'll cover more about the engines, and the Spark engine in particular, later in this class.",
      "user": "anonymous",
      "dateUpdated": "2018-12-02 22:54:35.827",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Some Explain Plan Details</h3>\n<p>To see the execution flow of a query, look at the generated plan from the <em>bottom up.</em> The very first steps of the query are at the bottom, then each step follows above. </p>\n<p>Each row includes the action being performed (a Scan, Join, grouping, etc.) followed by:</p>\n<table class=\"splicezepNoBorder\">\n    <col />\n    <col />\n    <tbody>\n        <tr>\n            <td><em>n count</em></td>\n            <td>The step of the plan (and again you can see as we go from the bottom up the count starts from 1 and goes up from there)</td>\n        </tr>\n        <tr>\n            <td><em>totalCost</em></td>\n            <td>The estimated cost for this step (and any substeps below it)</td>\n        </tr>\n        <tr>\n            <td><em>scannedRows (for Table or Index Scan steps)</em></td>\n            <td>The estimated count of how many rows need to be scanned in this step</td>\n        </tr>\n        <tr>\n            <td><em>outputRows</em></td>\n            <td>The estimated count of how many rows are passed to the next step in the plan</td>\n        </tr>\n        <tr>\n            <td><em>outputHeapSize</em></td>\n            <td>The estimated count of how much data is passed to the next step in the plan</td>\n        </tr>\n        <tr>\n            <td><em>partitions</em></td>\n            <td>The estimated number of (HBase) regions are involved in that step of the plan</td>\n        </tr>\n        <tr>\n            <td><em>preds</em></td>\n            <td>Which filtering predicates are applied in that step of the plan</td>\n        </tr>\n    </tbody>\n</table>\n<p>We will see that the scannedRows and outputRows are key numbers to monitor as we tune query performance.</p>\n<p>In the <em>explain</em> example that we just ran, we can see we are scanning table <code>import_example</code> twice, then joining them with a particular strategy; in this case, the strategy is a nested-loop join.</p>\n<h3>Which Engine?</h3>\n<p>The final steps, <code>Scroll Insensitive</code> and <code>Cursor</code> are typical end steps to the query execution. There is one <strong>very important</strong> piece of information shown on the <code>Cursor</code> line at the end:</p>\n<pre><code>Cursor(n=5,rows=360,updateMode=, engine=control)\n</code></pre>\n<p>This line shows you which <em>engine</em> is used for the query. The engine parameter indicates which engine Splice Machine plans to use. </p>\n<div class=\"noteIcon\">\n<p>As you may know, Splice Machine is a dual-engine database:</p>\n<ul style=\"margin-bottom:0; padding-bottom:0\">\n<li>Fast-running queries (e.g. those only processing a few rows) typically get executed on the <code>control</code> side, directly in HBase.</li>\n<li>Longer-running queries or queries that process a lot of data go through <code>Spark</code>.</li>\n</ul>\n</div>\n<p>We&rsquo;ll cover more about the engines, and the Spark engine in particular, later in this class.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542402377083_1513156442",
      "id": "20170916-191001_544321918",
      "dateCreated": "2018-11-16 13:06:17.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Where to Go Next\n\nThe next notebook in this class, [*Tuning Queries for Performance*](/#/notebook/2DX9MPD59), introduces the important elements required to make queries fast. ",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 07:26:00.648",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Where to Go Next</h2>\n<p>The next notebook in this class, <a href=\"/#/notebook/2DX9MPD59\"><em>Tuning Queries for Performance</em></a>, introduces the important elements required to make queries fast.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542402377084_5041605",
      "id": "20170907-075745_1978581419",
      "dateCreated": "2018-11-16 13:06:17.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Splice Machine Training/For DBAs/c. Running Queries",
  "id": "2DUMZ6BTQ",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "splicemachine:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}