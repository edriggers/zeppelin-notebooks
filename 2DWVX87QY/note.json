{
  "paragraphs": [
    {
      "text": "%md\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" />\n\n# ETL Pipeline\n\nThis notebook presents a simple example of an ETL pipeline that reads a dataset from a public URL, performs simple transformations, and inserts data into a Splice Machine database.\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 07:14:38.085",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" />\n<h1>ETL Pipeline</h1>\n<p>This notebook presents a simple example of an ETL pipeline that reads a dataset from a public URL, performs simple transformations, and inserts data into a Splice Machine database.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542398782256_-1098742411",
      "id": "20181116-200622_1729314692",
      "dateCreated": "2018-11-16 12:06:22.000",
      "dateStarted": "2018-11-16 12:07:31.000",
      "dateFinished": "2018-11-16 12:07:31.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nimport org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\nimport org.apache.spark.sql.execution.datasources.jdbc.JDBCOptions\nimport com.splicemachine.spark.splicemachine._\n\n// Grab available dataset from Watson\nval telcoText = sc.parallelize(\n    IOUtils.toString(\n        new URL(\"https://community.watsonanalytics.com/wp-content/uploads/2015/03/WA_Fn-UseC_-Telco-Customer-Churn.csv?cm_mc_uid=93701979699314920973859&cm_mc_sid_50200000=1492097385&cm_mc_sid_52640000=1492097385\"),\n        Charset.forName(\"utf8\")).split(\"\\n\"))\n\n// Declare the Schema of the Data Set         \ncase class TelcoChurn (customerID: String, gender: String, SeniorCitizen: Boolean,Partner: String,Dependents: String,tenure: Integer ,PhoneService: String,\nMultipleLines: String,InternetService: String,OnlineSecurity: String,OnlineBackup: String,DeviceProtection: String,TechSupport: String,StreamingTV: String,\nStreamingMovies: String,Contract: String,PaperlessBilling: String,PaymentMethod: String,MonthlyCharges: Double,TotalCharges: Double,Churn: String)\n\n// Perform Data Transformation\nval telcoDF = telcoText.map(s => s.split(\",\")).filter(s => s(0) != \"customerID\").map ( p => TelcoChurn (\n    p(0), p(1), \n    if (p(2).equals(\"0\")) \n        false \n    else \n        true, \n    p(3), p(4), p(5).toInt, p(6), p(7), p(8), p(9), p(10), p(11), p(12), p(13), p(14), p(15), p(16), p(17), p(18).toDouble, p(19).toDouble, p(20))).toDF()\n\n// Show First 10 Values from Data Frame\ntelcoDF.show(10)\n\n// Insert Data Into Database\n",
      "user": "anonymous",
      "dateUpdated": "2018-11-16 12:06:00.000",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542398760211_172845743",
      "id": "20170413-100458_275811262",
      "dateCreated": "2018-11-16 12:06:00.000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Where to Go Next\nCongratulations! You've just completed the *Splice Machine Data Science Class*. \n\nVisit [*Our Training Courses*](/#/notebook/2DWTR5ZBH) notebook learn about our other training classes.\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 07:15:00.729",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "results": {},
        "enabled": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "fontSize": 9.0,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Where to Go Next</h2>\n<p>Congratulations! You&rsquo;ve just completed the <em>Splice Machine Data Science Class</em>. </p>\n<p>Visit <a href=\"/#/notebook/2DWTR5ZBH\"><em>Our Training Courses</em></a> notebook learn about our other training classes.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542398760212_662535765",
      "id": "20170413-100618_77420174",
      "dateCreated": "2018-11-16 12:06:00.000",
      "dateStarted": "2018-11-29 18:15:51.613",
      "dateFinished": "2018-11-29 18:15:51.623",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Splice Machine Training/For Data Scientists/k. ETL Pipeline",
  "id": "2DWVX87QY",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}