{
  "paragraphs": [
    {
      "title": "Transactions ",
      "text": "%md\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" />\n\n# Transactions with Spark and JDBC\nThis notebook introduces using Spark and Scala to programmatically interact with Splice Machine via a JDBC connection. In this notebook, we'll:\n\n1. *Run setup code to create our variables and define a simple Spark procedure named `checkBalance`.*\n2. *Use JDBC calls to set and check values from the database.*\n3. *Show the use of `commit` and `rollback` to control transactional persistence of our updates.*\n<br />\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 05:08:58.775",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "title": false,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" />\n<h1>Transactions with Spark and JDBC</h1>\n<p>This notebook introduces using Spark and Scala to programmatically interact with Splice Machine via a JDBC connection. In this notebook, we&rsquo;ll:</p>\n<ol>\n  <li><em>Run setup code to create our variables and define a simple Spark procedure named <code>checkBalance</code>.</em></li>\n  <li><em>Use JDBC calls to set and check values from the database.</em></li>\n  <li><em>Show the use of <code>commit</code> and <code>rollback</code> to control transactional persistence of our updates.</em><br/><br /></li>\n</ol>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542395325471_793238414",
      "id": "20180115-164647_1759951771",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Run Setup Code and Define our Procedure\n\nFirst, we configure the JDBC URL we'll use to connect to your Splice Machine database:",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 05:08:55.914",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Run Setup Code and Define our Procedure</h2>\n<p>First, we configure the JDBC URL we&rsquo;ll use to connect to your Splice Machine database:</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542850708004_-1697364192",
      "id": "20181121-173828_564206103",
      "dateCreated": "2018-11-21 17:38:28.004",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nval localJDBCURL = \"\"\"jdbc:splice://localhost:1527/splicedb;user=splice;password=admin\"\"\"\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-02 17:23:36.665",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542395325471_1357966940",
      "id": "20180828-115218_491973685",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n<br />\nNext, we define a simple procedure, `checkBalance` that checks and *pretty-prints* the current balance for a supplier:",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 05:09:05.591",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<br />\n<p>Next, we define a simple procedure, <code>checkBalance</code> that checks and <em>pretty-prints</em> the current balance for a supplier:</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542850779698_-1175907831",
      "id": "20181121-173939_1123275261",
      "dateCreated": "2018-11-21 17:39:39.699",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Simple Function to Pretty Print Balance",
      "text": "%spark\nimport java.sql.{DriverManager,Connection}\nvar conn = DriverManager.getConnection(localJDBCURL)\nconn.setAutoCommit(false)\nvar statement = conn.createStatement()\n\ndef checkBalance(suppKey: Integer) : Unit = {\n    var resSet = statement.executeQuery(\"SELECT S_ACCTBAL FROM DEV2.SUPPLIER WHERE S_SUPPKEY = \" + suppKey.toString())\n    while ( resSet.next() ) {\n        var bl = resSet.getString(\"S_ACCTBAL\")\n        println(\"================ Current account balance: \" + bl + \" ====================\");\n    }\n}\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-02 17:23:39.694",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "fontSize": 9.0,
        "title": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542395325472_1190484058",
      "id": "20180115-164841_170157787",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nNow we can check the balance easily at any time with the checkBalance call, passing in the supply key as a parameter:",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 05:09:13.903",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Now we can check the balance easily at any time with the checkBalance call, passing in the supply key as a parameter:</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542395325472_1299881130",
      "id": "20180115-165029_1635005335",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\ncheckBalance(6517)",
      "user": "anonymous",
      "dateUpdated": "2018-12-02 17:23:48.794",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 88.0,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542395325473_-1870806278",
      "id": "20180115-165115_1164524303",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nOur setup code created two useful variables we can now employ:\n\n<table class=\"splicezepNoBorder\">\n   <tbody>\n      <tr>\n          <td class=\"CodeFont\">statement</td>\n          <td>The standard JDBC Statement object, on which we run functions such as `executeUpdate`.\n      </tr>\n      <tr style=\"background-color: transparent;\">\n          <td class=\"CodeFont\">conn</td>\n          <td style=\"background-color: transparent;\" >A standard JDBC Connection object, on which run `commit` and `rollback`.\n      </tr>\n    </tbody>\n</table>\n\nThe first example shows an update statement which, upon committing, retains the value to which it is set.\n\n## Committing a Transaction",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 05:10:39.621",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Our setup code created two useful variables we can now employ:</p>\n<table class=\"splicezepNoBorder\">\n   <tbody>\n      <tr>\n          <td class=\"CodeFont\">statement</td>\n          <td>The standard JDBC Statement object, on which we run functions such as `executeUpdate`.\n      </tr>\n      <tr style=\"background-color: transparent;\">\n          <td class=\"CodeFont\">conn</td>\n          <td style=\"background-color: transparent;\" >A standard JDBC Connection object, on which run `commit` and `rollback`.\n      </tr>\n    </tbody>\n</table>\n<p>The first example shows an update statement which, upon committing, retains the value to which it is set.</p>\n<h2>Committing a Transaction</h2>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542395325473_-1804326062",
      "id": "20180115-165133_1245971625",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Transaction Commit Example",
      "text": "%spark\nstatement.executeUpdate(\"update DEV2.SUPPLIER SET S_ACCTBAL = 10000 WHERE S_SUPPKEY = 6517\");\ncheckBalance(6517);\nconn.commit();\ncheckBalance(6517);",
      "user": "anonymous",
      "dateUpdated": "2018-12-02 17:23:56.923",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": false,
        "results": {},
        "enabled": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542395325474_808184951",
      "id": "20180115-165153_163460075",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n<br />\nBut if we choose to do a rollback, the value returns to the previous value before the transactional context, as shown in the next example.\n\n## Rolling Back a Transaction",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 05:10:05.466",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<br />\n<p>But if we choose to do a rollback, the value returns to the previous value before the transactional context, as shown in the next example.</p>\n<h2>Rolling Back a Transaction</h2>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542395325474_1936619764",
      "id": "20180115-165208_1601331583",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Transaction Rollback Example",
      "text": "%spark\nstatement.executeUpdate(\"update DEV2.SUPPLIER SET S_ACCTBAL = 0 WHERE S_SUPPKEY = 6517\")\ncheckBalance(6517);\nconn.rollback();\ncheckBalance(6517);\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-02 17:24:10.365",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "title": false,
        "results": {},
        "enabled": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542395325474_1159942425",
      "id": "20180115-165244_2028152757",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n\nThis was a simple demonstration of transactional commit and rollback, even from within Scala code.  Later on we'll get more involved with Spark libraries using the Native Spark Datasource.\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-02 17:24:15.496",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>This was a simple demonstration of transactional commit and rollback, even from within Scala code. Later on we&rsquo;ll get more involved with Spark libraries using the Native Spark Datasource.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543771216564_1664455240",
      "id": "20181202-172016_778467171",
      "dateCreated": "2018-12-02 17:20:16.564",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Where to Go Next\n\nThe next notebook in this class walks you through [*Deploying Apps with Spring*](/#/notebook/2DVU2ESP3).\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-01 05:10:10.403",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9.0,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Where to Go Next</h2>\n<p>The next notebook in this class walks you through <a href=\"/#/notebook/2DVU2ESP3\"><em>Deploying Apps with Spring</em></a>.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542395325475_-533431393",
      "id": "20180122-173624_509126525",
      "dateCreated": "2018-11-16 11:08:45.000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Splice Machine Training / For Developers, Part II - Intermediate / f. Transactions with Spark and JDBC",
  "id": "2DUKWWK84",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "splicemachine:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}
