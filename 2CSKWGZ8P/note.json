{
  "paragraphs": [
    {
      "text": "%md\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles.css\" />\n\n# Importing Data into Your Splice Machine Database\n\nThis tutorial walks you through importing data into your Splice Machine database from flat files that are stored in S3.\n\nBefore starting this tutorial, you should already have your data stored in delimited format (such as CSV) in an S3 bucket; if that's not yet true, please review the previous tutorial, <a href=\"/#/notebook/2CUA8V2RK\">Copying Data to S3,</a> which walks you through copying your data to S3.\n\nWe'll walk you through a simple example, after which you'll be able to import your own data into your database.\n\n## Import Data Checklist\n\nWhen you use the `import` command in Splice Machine to load your data into your database, you need to specify a number of details about your data files to get them correctly imported. Before starting this process, please make sure your data formats will work, as defined here:\n\n\n<table class=\"splicezep\">\n    <col />\n    <col />\n    <thead>\n        <tr>\n            <th>Data File Detail</th>\n            <th>Specific Requirements</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Field delimited?</td>\n            <td>The fields in each row <strong>must</strong> have delimiters between them</td>\n        </tr>\n        <tr>\n            <td>Rows terminated?</td>\n            <td>Each row <strong>must</strong> be terminated with a newline character</td>\n        </tr>\n        <tr>\n            <td>Header row included?</td>\n            <td>Header rows are not allowed; if your data contains one, you <strong>must</strong> remove it.</td>\n        </tr>\n        <tr>\n            <td><code>Date</code>, <code>time</code>, <code>timestamp</code> data types</td>\n            <td> If you are using <code>date</code>, <code>time</code>, and/or <code>timestamp</code> data types in the target table, you need to know how that data is represented in the flat file; your file <strong>must</strong> use a consistent representation, and you must specify that format when using the import command.</td>\n        </tr>\n        <tr>\n            <td><code>Char</code> and <code>Varchar</code> data</td>\n            <td><p>If any of your <code>char</code> or <code>varchar</code> data contains your delimiter character, you <strong>need to use</strong> a special character delimiter.</p>\n                <p>If any of your <code>char</code> or <code>varchar</code> data contains newline characters, you <strong>need to use</strong> the <code>oneLineRecords</code> parameter.</p>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n\nThe examples in this tutorial will clarify how to specify these parameters when importing data. For more information, please see the Splice Machine <a href=\"https://doc.splicemachine.com/sqlref_sysprocs_importdata.html\" target=\"_blank\">import data procedure documentation</a> page.\n\n<p class=\"noteIcon\">It is a good idea to test your import, delimiting, date formatting, etc., on a small amount of data first before loading all of your data. That's what we'll do in this Tutorial.</p>\n",
      "user": "anonymous",
      "dateUpdated": "2018-02-02T13:05:12-0800",
      "config": {
        "colWidth": 12,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles.css\" />\n<h1>Importing Data into Your Splice Machine Database</h1>\n<p>This tutorial walks you through importing data into your Splice Machine database from flat files that are stored in S3.</p>\n<p>Before starting this tutorial, you should already have your data stored in delimited format (such as CSV) in an S3 bucket; if that&rsquo;s not yet true, please review the previous tutorial, <a href=\"/#/notebook/2CUA8V2RK\">Copying Data to S3,</a> which walks you through copying your data to S3.</p>\n<p>We&rsquo;ll walk you through a simple example, after which you&rsquo;ll be able to import your own data into your database.</p>\n<h2>Import Data Checklist</h2>\n<p>When you use the <code>import</code> command in Splice Machine to load your data into your database, you need to specify a number of details about your data files to get them correctly imported. Before starting this process, please make sure your data formats will work, as defined here:</p>\n<table class=\"splicezep\">\n    <col />\n    <col />\n    <thead>\n        <tr>\n            <th>Data File Detail</th>\n            <th>Specific Requirements</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Field delimited?</td>\n            <td>The fields in each row <strong>must</strong> have delimiters between them</td>\n        </tr>\n        <tr>\n            <td>Rows terminated?</td>\n            <td>Each row <strong>must</strong> be terminated with a newline character</td>\n        </tr>\n        <tr>\n            <td>Header row included?</td>\n            <td>Header rows are not allowed; if your data contains one, you <strong>must</strong> remove it.</td>\n        </tr>\n        <tr>\n            <td><code>Date</code>, <code>time</code>, <code>timestamp</code> data types</td>\n            <td> If you are using <code>date</code>, <code>time</code>, and/or <code>timestamp</code> data types in the target table, you need to know how that data is represented in the flat file; your file <strong>must</strong> use a consistent representation, and you must specify that format when using the import command.</td>\n        </tr>\n        <tr>\n            <td><code>Char</code> and <code>Varchar</code> data</td>\n            <td><p>If any of your <code>char</code> or <code>varchar</code> data contains your delimiter character, you <strong>need to use</strong> a special character delimiter.</p>\n                <p>If any of your <code>char</code> or <code>varchar</code> data contains newline characters, you <strong>need to use</strong> the <code>oneLineRecords</code> parameter.</p>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<p>The examples in this tutorial will clarify how to specify these parameters when importing data. For more information, please see the Splice Machine <a href=\"https://doc.splicemachine.com/sqlref_sysprocs_importdata.html\" target=\"_blank\">import data procedure documentation</a> page.</p>\n<p class=\"noteIcon\">It is a good idea to test your import, delimiting, date formatting, etc., on a small amount of data first before loading all of your data. That's what we'll do in this Tutorial.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1504793558519_-1941687667",
      "id": "20170907-071238_703539388",
      "dateCreated": "2017-09-07T07:12:38-0700",
      "dateStarted": "2018-02-02T13:05:12-0800",
      "dateFinished": "2018-02-02T13:05:12-0800",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:1753"
    },
    {
      "text": "%md\n## The IMPORT_DATA Command\n\nSyntax for the `IMPORT_DATA` command looks like this:\n```\ncall SYSCS_UTIL.IMPORT_DATA (\n\tschemaName,\n\ttableName,\n\tinsertColumnList | null,\n\tfileOrDirectoryName,\n\tcolumnDelimiter | null,\n\tcharacterDelimiter | null,\n\ttimestampFormat | null,\n\tdateFormat | null,\n\ttimeFormat | null,\n\tbadRecordsAllowed,\n\tbadRecordDirectory | null,\n\toneLineRecords | null,\n\tcharset | null \n);\n```\nNotice that many of the parameters allow you to apply the default value by specifying `null`.\n\n<p class=\"noteNote\">You can find full details about these parameters, including the default value for each, in <a href=\"https://doc.splicemachine.com/sqlref_sysprocs_importdata.html\" target=\"_blank\">our Importing Data documentation.</a></p>\n",
      "user": "anonymous",
      "dateUpdated": "2018-02-02T13:14:14-0800",
      "config": {
        "colWidth": 12,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>The IMPORT_DATA Command</h2>\n<p>Syntax for the <code>IMPORT_DATA</code> command looks like this:</p>\n<pre><code>call SYSCS_UTIL.IMPORT_DATA (\n\tschemaName,\n\ttableName,\n\tinsertColumnList | null,\n\tfileOrDirectoryName,\n\tcolumnDelimiter | null,\n\tcharacterDelimiter | null,\n\ttimestampFormat | null,\n\tdateFormat | null,\n\ttimeFormat | null,\n\tbadRecordsAllowed,\n\tbadRecordDirectory | null,\n\toneLineRecords | null,\n\tcharset | null \n);\n</code></pre>\n<p>Notice that many of the parameters allow you to apply the default value by specifying <code>null</code>.</p>\n<p class=\"noteNote\">You can find full details about these parameters, including the default value for each, in <a href=\"https://doc.splicemachine.com/sqlref_sysprocs_importdata.html\" target=\"_blank\">our Importing Data documentation.</a></p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1504795507081_-2118715965",
      "id": "20170907-074507_462416683",
      "dateCreated": "2017-09-07T07:45:07-0700",
      "dateStarted": "2018-02-02T13:14:14-0800",
      "dateFinished": "2018-02-02T13:14:14-0800",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1754"
    },
    {
      "text": "%md\n\n### Example 1\n\nThis example allows you to walk through importing data one step at a time and see the results of that step.\n\n#### 1. Create our Database Table\n\nYou can get started by clicking the  <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> *Run* button to run the next paragraph in this Notebook, which uses the *%splicemachine* interpreter to create a table in your Splice Machine database.",
      "user": "anonymous",
      "dateUpdated": "2018-02-02T13:14:34-0800",
      "config": {
        "colWidth": 12,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS"
      },
      "apps": [],
      "jobName": "paragraph_1507834413270_1833061053",
      "id": "20171012-115333_567951903",
      "dateCreated": "2017-10-12T11:53:33-0700",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1755"
    },
    {
      "text": "%splicemachine\n\ncreate table import_example (i int, v varchar(20), t timestamp);",
      "user": "anonymous",
      "dateUpdated": "2018-02-02T13:14:52-0800",
      "config": {
        "colWidth": 12,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS"
      },
      "apps": [],
      "jobName": "paragraph_1505599119560_133176256",
      "id": "20170916-145839_408808168",
      "dateCreated": "2017-09-16T14:58:39-0700",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1756"
    },
    {
      "text": "%md\n\n#### 2. Import a Small Data Sample\n\nNow we'll import a small sample of our data to make sure that we've got our import set up correctly. We've created a sample data file named *example1.csv* that contains these two records:\n\n<pre>100,hello there,2017-01-01 00:00:00\n200,how are you,2017-02-01 00:00:00</pre>\n\nImport the data in this file by clicking the <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> *Run* button to run the next paragraph, which calls our `IMPORT_DATA` function",
      "user": "anonymous",
      "dateUpdated": "2017-10-19T11:05:15-0700",
      "config": {
        "colWidth": 12,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h4>2. Import a Small Data Sample</h4>\n<p>Now we&rsquo;ll import a small sample of our data to make sure that we&rsquo;ve got our import set up correctly. We&rsquo;ve created a sample data file named <em>example1.csv</em> that contains these two records:</p>\n<pre>100,hello there,2017-01-01 00:00:00\n200,how are you,2017-02-01 00:00:00</pre>\n<p>Import the data in this file by clicking the <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> <em>Run</em> button to run the next paragraph, which calls our <code>IMPORT_DATA</code> function</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1505605224320_-728871188",
      "id": "20170916-164024_410953951",
      "dateCreated": "2017-09-16T16:40:24-0700",
      "dateStarted": "2017-10-19T11:05:15-0700",
      "dateFinished": "2017-10-19T11:05:15-0700",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1757"
    },
    {
      "text": "%splicemachine\n\ncall SYSCS_UTIL.IMPORT_DATA('splice','import_example',null,'s3a://splice-examples/import/example1.csv',null,null,null,null,null,0,null,null,null);",
      "user": "anonymous",
      "dateUpdated": "2018-02-02T13:19:40-0800",
      "config": {
        "colWidth": 12,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 88,
              "optionOpen": false
            }
          }
        },
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS"
      },
      "apps": [],
      "jobName": "paragraph_1505605226894_1434187128",
      "id": "20170916-164026_68551836",
      "dateCreated": "2017-09-16T16:40:26-0700",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1758"
    },
    {
      "text": "%md\n<br />\n\nYou'll notice that after you run the paragraph, you see a short report that indicates how many rows were successfully loaded, and how many failed to load, In this example, all 2 rows were successfully loaded.\n\nYou have probably also noticed that we used default values by specifying `null` for all of the parameters that have defaults; here's what those defaults mean:\n\n<table class=\"splicezep\">\n    <col />\n    <col />\n    <thead>\n        <tr>\n            <th>Parameter</th>\n            <th>NULL Value Details</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"CodeFont\">insertColumnList</td>\n            <td>Our column list exactly matches the columns and ordering of columns in the table, so there's not need to specify a list.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">columnDelimiter</td>\n            <td>Our data uses the default comma character (<code>,</code>) to delimit columns.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">stringDelimiter</td>\n            <td>None of our data fields contain the comma character, so we don't need a string delimiter character.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">timestampFormat</td>\n            <td>Our data matches the default timestamp format, which is <code>yyyy-MM-dd HH:mm:ss</code></td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">dateFormat</td>\n            <td>Our data doesn't contain any date columns, so there's no need to specify a format.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">timeFormat</td>\n            <td>Our data doesn't contain any time columns, so there's no need to specify a format.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">badRecordDirectory</td>\n            <td>We left this <code>null</code>, which is allowable, but not considered a good practice. Splice Machine advises specifying a bad record directory so that you can diagnose any record import problems.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">oneLineRecords</td>\n            <td>We were able to leave this as <code>null</code> because our records each fit on one line. If your data contains any newline characters, you must specify <code>false</code> for this parameter, and you must include delimiters around the data.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">charset</td>\n            <td>This parameter is currently ignored; Splice Machine assumes that your data uses utf-8 encoding.</td>\n        </tr>\n    </tbody>\n</table>\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-13T17:25:37-0700",
      "config": {
        "colWidth": 12,
        "enabled": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 513,
              "optionOpen": false
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<br />\n<p>You&rsquo;ll notice that after you run the paragraph, you see a short report that indicates how many rows were successfully loaded, and how many failed to load, In this example, all 2 rows were successfully loaded.</p>\n<p>You have probably also noticed that we used default values by specifying <code>null</code> for all of the parameters that have defaults; here&rsquo;s what those defaults mean:</p>\n<table class=\"splicezep\">\n    <col />\n    <col />\n    <thead>\n        <tr>\n            <th>Parameter</th>\n            <th>NULL Value Details</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"CodeFont\">insertColumnList</td>\n            <td>Our column list exactly matches the columns and ordering of columns in the table, so there's not need to specify a list.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">columnDelimiter</td>\n            <td>Our data uses the default comma character (<code>,</code>) to delimit columns.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">stringDelimiter</td>\n            <td>None of our data fields contain the comma character, so we don't need a string delimiter character.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">timestampFormat</td>\n            <td>Our data matches the default timestamp format, which is <code>yyyy-MM-dd HH:mm:ss</code></td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">dateFormat</td>\n            <td>Our data doesn't contain any date columns, so there's no need to specify a format.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">timeFormat</td>\n            <td>Our data doesn't contain any time columns, so there's no need to specify a format.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">badRecordDirectory</td>\n            <td>We left this <code>null</code>, which is allowable, but not considered a good practice. Splice Machine advises specifying a bad record directory so that you can diagnose any record import problems.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">oneLineRecords</td>\n            <td>We were able to leave this as <code>null</code> because our records each fit on one line. If your data contains any newline characters, you must specify <code>false</code> for this parameter, and you must include delimiters around the data.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">charset</td>\n            <td>This parameter is currently ignored; Splice Machine assumes that your data uses utf-8 encoding.</td>\n        </tr>\n    </tbody>\n</table>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1505605378483_-2119122206",
      "id": "20170916-164258_1714730049",
      "dateCreated": "2017-09-16T16:42:58-0700",
      "dateStarted": "2017-10-13T17:25:37-0700",
      "dateFinished": "2017-10-13T17:25:37-0700",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1759"
    },
    {
      "text": "%md\n\n#### 3. Make Minor Data Changes and Corresponding Parameter Changes\n\nNow we'll make a few minor changes in our input data to see how that influences our import command. The modified data is stored in the \nLet's change the data a bit, and see how that influences the import_data command. \n\nThe updated data, stored in *example2.csv*, looks like this:\n\n<pre>\n'hello\nthere'|2017-01-01 00:00:00.123456\n'how, are you'|2017-02-01 00:00:00.123456\n</pre>\n\nNow import the data in the example2.csv file by clicking the  <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> *Run* button in the next paragraph, which again uses the *%splicemachine* interpreter:\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-19T10:47:44-0700",
      "config": {
        "colWidth": 12,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h4>3. Make Minor Data Changes and Corresponding Parameter Changes</h4>\n<p>Now we&rsquo;ll make a few minor changes in our input data to see how that influences our import command. The modified data is stored in the<br/>Let&rsquo;s change the data a bit, and see how that influences the import_data command. </p>\n<p>The updated data, stored in <em>example2.csv</em>, looks like this:</p>\n<pre>\n'hello\nthere'|2017-01-01 00:00:00.123456\n'how, are you'|2017-02-01 00:00:00.123456\n</pre>\n<p>Now import the data in the example2.csv file by clicking the <img class=\"inline\" src=\"https://doc.splicemachine.com/zeppelin/images/zepPlayIcon.png\" alt=\"Run Zep Paragraph Icon\"> <em>Run</em> button in the next paragraph, which again uses the <em>%splicemachine</em> interpreter:</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1505611274701_275721796",
      "id": "20170916-182114_1562378772",
      "dateCreated": "2017-09-16T18:21:14-0700",
      "dateStarted": "2017-10-19T10:47:44-0700",
      "dateFinished": "2017-10-19T10:47:44-0700",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1760"
    },
    {
      "text": "%splicemachine\ncall SYSCS_UTIL.IMPORT_DATA('splice','import_example','v,t','s3a://splice-examples/import/example2.csv','|','''','yyyy-MM-dd HH:mm:ss.SSSSSS',null,null,0,null,false,null)",
      "user": "anonymous",
      "dateUpdated": "2018-02-02T13:21:41-0800",
      "config": {
        "colWidth": 12,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 84,
              "optionOpen": false
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/sql",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS"
      },
      "apps": [],
      "jobName": "paragraph_1505611385032_-497822707",
      "id": "20170916-182305_148259237",
      "dateCreated": "2017-09-16T18:23:05-0700",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1761"
    },
    {
      "text": "%md\n<br />\n\nLet's examine the changes in our call to `IMPORT_DATA` due to changes in our data file:\n\n<table class=\"splicezep\">\n    <col />\n    <col />\n    <thead>\n        <tr>\n            <th>Parameter</th>\n            <th>Details</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"CodeFont\">insertColumnList</td>\n            <td><p>In this case, we only want to import two of the three columns in our input data, so we specify the names of the columns we want imported.</p>\n                <p class=\"noteNote\">The default value (or `null` if no default value is defined in the database) is inserted for records that don't contain a value in a column being imported.</p>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">columnDelimiter</td>\n            <td>At least one of our records includes a string that contains the default delimiter (comma), so need to use a different delimiter character. Our sample file uses the `|` character.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">stringDelimiter</td>\n            <td><p>We want to be able to include commas and newlines in our input data fields, so we enclose string data in our input file in single quote (<code>'</code>) characters.</p>\n                <p class=\"noteNote\">You need to escape the single quote character in your parameter values, which is why you see four single quotes (<code>''''</code>).</p>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">timestampFormat</td>\n            <td>Our data now includes microseconds, so we need to change our format specification to <code>yyyy-MM-dd HH:mm:ss.SSSSSS</code>.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">oneLineRecords</td>\n            <td>One of our input records contains a newline, so we must explicitly set this value to <code>false</code>.</td>\n        </tr>\n    </tbody>\n</table>\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-13T17:25:47-0700",
      "config": {
        "colWidth": 12,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<br />\n<p>Let&rsquo;s examine the changes in our call to <code>IMPORT_DATA</code> due to changes in our data file:</p>\n<table class=\"splicezep\">\n    <col />\n    <col />\n    <thead>\n        <tr>\n            <th>Parameter</th>\n            <th>Details</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"CodeFont\">insertColumnList</td>\n            <td><p>In this case, we only want to import two of the three columns in our input data, so we specify the names of the columns we want imported.</p>\n                <p class=\"noteNote\">The default value (or `null` if no default value is defined in the database) is inserted for records that don't contain a value in a column being imported.</p>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">columnDelimiter</td>\n            <td>At least one of our records includes a string that contains the default delimiter (comma), so need to use a different delimiter character. Our sample file uses the `|` character.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">stringDelimiter</td>\n            <td><p>We want to be able to include commas and newlines in our input data fields, so we enclose string data in our input file in single quote (<code>'</code>) characters.</p>\n                <p class=\"noteNote\">You need to escape the single quote character in your parameter values, which is why you see four single quotes (<code>''''</code>).</p>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">timestampFormat</td>\n            <td>Our data now includes microseconds, so we need to change our format specification to <code>yyyy-MM-dd HH:mm:ss.SSSSSS</code>.</td>\n        </tr>\n        <tr>\n            <td class=\"CodeFont\">oneLineRecords</td>\n            <td>One of our input records contains a newline, so we must explicitly set this value to <code>false</code>.</td>\n        </tr>\n    </tbody>\n</table>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1505612143944_-2052138744",
      "id": "20170916-183543_1181641403",
      "dateCreated": "2017-09-16T18:35:43-0700",
      "dateStarted": "2017-10-13T17:25:47-0700",
      "dateFinished": "2017-10-13T17:25:47-0700",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1762"
    },
    {
      "text": "%md\n### Where to Go Next\n\nOnce you have successfully imported your own data, you're ready to run queries. See our next tutorial, <a href=\"/#/notebook/2CU1SNACA\">Running Queries</a>.\n\n<p class=\"noteIcon\">Our <a href=\"https://doc.splicemachine.com/sqlref_sysprocs_importdata.html\" target=\"_blank\">documentation for importing data</a> is extremely useful in handling your specific import cases, especially with respect to supported timestamp, date, and time data formats.</p>\n",
      "user": "anonymous",
      "dateUpdated": "2018-02-02T13:21:50-0800",
      "config": {
        "colWidth": 12,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Where to Go Next</h3>\n<p>Once you have successfully imported your own data, you&rsquo;re ready to run queries. See our next tutorial, <a href=\"/#/notebook/2CU1SNACA\">Running Queries</a>.</p>\n<p class=\"noteIcon\">Our <a href=\"https://doc.splicemachine.com/sqlref_sysprocs_importdata.html\" target=\"_blank\">documentation for importing data</a> is extremely useful in handling your specific import cases, especially with respect to supported timestamp, date, and time data formats.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1504795620788_-1296138141",
      "id": "20170907-074700_1452777231",
      "dateCreated": "2017-09-07T07:47:00-0700",
      "dateStarted": "2018-02-02T13:21:50-0800",
      "dateFinished": "2018-02-02T13:21:50-0800",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1763"
    },
    {
      "text": "",
      "user": "anonymous",
      "dateUpdated": "2017-10-12T16:48:47-0700",
      "config": {
        "colWidth": 12,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/sql",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1504796429762_2006154567",
      "id": "20170907-080029_765242977",
      "dateCreated": "2017-09-07T08:00:29-0700",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:1764"
    }
  ],
  "name": "2. Tutorials / 3. Importing Data",
  "id": "2CSKWGZ8P",
  "angularObjects": {
    "2CXCMFNBY:shared_process": [],
    "2CUTP4DV1:shared_process": [],
    "2CY73S1Z7:shared_process": [],
    "2CW568HMS:shared_process": [],
    "2CW8MZGCK:shared_process": [],
    "2CVM35CHN:shared_process": [],
    "2CX248U3T:shared_process": []
  },
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}