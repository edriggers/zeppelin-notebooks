{
  "noteForms": {}, 
  "angularObjects": {}, 
  "name": "Splice Machine Training / For Developers, Part II / k. ETL Pipeline Example", 
  "info": {}, 
  "noteParams": {}, 
  "paragraphs": [
    {
      "status": "FINISHED", 
      "dateFinished": "2018-12-04 00:59:10.833", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%md\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" />\n\n# ETL Pipeline Example\n\nThis notebook presents a simple example of an ETL pipeline that reads a dataset from a public URL, performs simple transformations, and inserts data into a Splice Machine database.\n\n### Extract\nFirst we'll extract some data from a public URL, containing historical data about Telco customers and whether they discontinued service.  This is a good dataset for demonstrating machine learning algorithms for predicting customer churn:\n", 
      "apps": [], 
      "results": {
        "msg": [
          {
            "data": "<div class=\"markdown-body\">\n<link rel=\"stylesheet\" href=\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" />\n<h1>ETL Pipeline Example</h1>\n<p>This notebook presents a simple example of an ETL pipeline that reads a dataset from a public URL, performs simple transformations, and inserts data into a Splice Machine database.</p>\n<h3>Extract</h3>\n<p>First we&rsquo;ll extract some data from a public URL, containing historical data about Telco customers and whether they discontinued service. This is a good dataset for demonstrating machine learning algorithms for predicting customer churn:</p>\n</div>", 
            "type": "HTML"
          }
        ], 
        "code": "SUCCESS"
      }, 
      "jobName": "paragraph_1542396165231_1238194394", 
      "user": "anonymous", 
      "dateStarted": "2018-12-04 00:59:07.862", 
      "dateUpdated": "2018-12-04 00:59:14.277", 
      "dateCreated": "2018-11-16 11:22:45.000", 
      "config": {
        "editorHide": true, 
        "enabled": false, 
        "results": {}, 
        "editorMode": "ace/mode/markdown", 
        "fontSize": 9.0, 
        "tableHide": false, 
        "editorSetting": {
          "completionKey": "TAB", 
          "editOnDblClick": true, 
          "completionSupport": false, 
          "language": "markdown"
        }, 
        "colWidth": 12.0
      }, 
      "id": "20181116-192245_1346898964", 
      "progressUpdateIntervalMs": 500
    }, 
    {
      "status": "READY", 
      "dateFinished": "2018-12-04 01:05:17.184", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%spark.pyspark\nimport urllib2\nfrom io import StringIO\nimport csv\nfrom pyspark.sql.types import *\n\n#get file\nurl = \"https://community.watsonanalytics.com/wp-content/uploads/2015/03/WA_Fn-UseC_-Telco-Customer-Churn.csv?cm_mc_uid=93701979699314920973859&cm_mc_sid_50200000=1492097385&cm_mc_sid_52640000=1492097385\"\nresponse = urllib2.urlopen(url)\ntelcoText = csv.reader(response)\n", 
      "errorMessage": "", 
      "apps": [], 
      "jobName": "paragraph_1542396141142_1804321142", 
      "user": "anonymous", 
      "dateStarted": "2018-12-04 01:05:16.644", 
      "dateUpdated": "2018-12-04 01:05:25.231", 
      "dateCreated": "2018-11-16 11:22:21.000", 
      "config": {
        "enabled": true, 
        "results": {}, 
        "editorSetting": {
          "completionKey": "TAB", 
          "editOnDblClick": false, 
          "completionSupport": true, 
          "language": "python"
        }, 
        "fontSize": 9.0, 
        "tableHide": false, 
        "editorMode": "ace/mode/python", 
        "colWidth": 12.0
      }, 
      "id": "20170413-100458_275811262", 
      "progressUpdateIntervalMs": 500
    }, 
    {
      "status": "FINISHED", 
      "dateFinished": "2018-12-04 01:00:51.798", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%md\n### Transform\n\nNext we'll do some transformation of the data stream.  In this case we are doing some simple data cleansing and type conversions, and adding an additional column whose value is a function of other data in the existing columns:", 
      "apps": [], 
      "results": {
        "msg": [
          {
            "data": "<div class=\"markdown-body\">\n<h3>Transform</h3>\n<p>Next we&rsquo;ll do some transformation of the data stream. In this case we are doing some simple data cleansing and type conversions, and adding an additional column whose value is a function of other data in the existing columns:</p>\n</div>", 
            "type": "HTML"
          }
        ], 
        "code": "SUCCESS"
      }, 
      "jobName": "paragraph_1543885167312_-1301214618", 
      "user": "anonymous", 
      "dateStarted": "2018-12-04 01:00:51.786", 
      "dateUpdated": "2018-12-04 01:05:33.135", 
      "dateCreated": "2018-12-04 00:59:27.313", 
      "config": {
        "editorHide": true, 
        "enabled": false, 
        "results": {}, 
        "editorMode": "ace/mode/markdown", 
        "fontSize": 9.0, 
        "tableHide": false, 
        "editorSetting": {
          "completionKey": "TAB", 
          "editOnDblClick": true, 
          "completionSupport": false, 
          "language": "markdown"
        }, 
        "colWidth": 12.0
      }, 
      "id": "20181204-005927_1230178969", 
      "progressUpdateIntervalMs": 500
    }, 
    {
      "status": "READY", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%spark.pyspark\n#grab header and rows\nheader = telcoText.next()\nheader = [name.upper() for name in header]\n#handle some missing values\nrows = [row for row in telcoText if row[19] != ' ']\n#convert SeniorCitizen to boolean\nfor i in range(len(rows)):\n    rows[i][2] = bool(int(rows[i][2]))\n    rows[i][5] = int(rows[i][5])\n    rows[i][18] = float(rows[i][18])\n    rows[i][19] = float(rows[i][19])\n\n#get fields for schema\nfields = []\nfor col in header:\n    if col == 'SeniorCitizen':\n        t = BooleanType()\n    elif col == 'tenure':\n        t = IntegerType()\n    elif col == 'MonthlyCharges' or col=='TotalCharges':\n        t == DoubleType()\n    else:\n        t = StringType()\n    fields.append(StructField(col, t, True))\n#create schema\nschema = StructType(fields)\n\n#create DF\ntelcoDF = sc.parallelize(rows).toDF(schema)", 
      "apps": [], 
      "results": {
        "code": "SUCCESS"
      }, 
      "jobName": "paragraph_1543885255419_648169093", 
      "user": "anonymous", 
      "dateUpdated": "2018-12-04 01:05:37.575", 
      "dateCreated": "2018-12-04 01:00:55.419", 
      "config": {
        "enabled": true, 
        "results": {}, 
        "editorMode": "ace/mode/python", 
        "fontSize": 9.0, 
        "editorSetting": {
          "completionKey": "TAB", 
          "editOnDblClick": false, 
          "completionSupport": true, 
          "language": "python"
        }, 
        "colWidth": 12.0
      }, 
      "id": "20181204-010055_164624808", 
      "progressUpdateIntervalMs": 500
    }, 
    {
      "status": "READY", 
      "dateFinished": "2018-12-04 01:05:48.643", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%spark.pyspark\n\nz.show(telcoDF)\n", 
      "errorMessage": "", 
      "apps": [], 
      "jobName": "paragraph_1543885206824_-1501314020", 
      "user": "anonymous", 
      "dateStarted": "2018-12-04 01:05:48.033", 
      "dateUpdated": "2018-12-04 01:05:58.388", 
      "dateCreated": "2018-12-04 01:00:06.824", 
      "config": {
        "enabled": true, 
        "results": {}, 
        "editorMode": "ace/mode/python", 
        "fontSize": 9.0, 
        "tableHide": false, 
        "editorSetting": {
          "completionKey": "TAB", 
          "editOnDblClick": false, 
          "completionSupport": true, 
          "language": "python"
        }, 
        "colWidth": 12.0
      }, 
      "id": "20181204-010006_1922043166", 
      "progressUpdateIntervalMs": 500
    }, 
    {
      "status": "FINISHED", 
      "dateFinished": "2018-12-04 01:02:36.156", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%md\n### Load\n\nNow that we have the data we want to load into the database, we'll define the schema and load it directly in using the Native Spark DataSource:\n", 
      "apps": [], 
      "results": {
        "msg": [
          {
            "data": "<div class=\"markdown-body\">\n<h3>Load</h3>\n<p>Now that we have the data we want to load into the database, we&rsquo;ll define the schema and load it directly in using the Native Spark DataSource:</p>\n</div>", 
            "type": "HTML"
          }
        ], 
        "code": "SUCCESS"
      }, 
      "jobName": "paragraph_1543885321016_-480887096", 
      "user": "anonymous", 
      "dateStarted": "2018-12-04 01:02:36.145", 
      "dateUpdated": "2018-12-04 01:02:36.136", 
      "dateCreated": "2018-12-04 01:02:01.016", 
      "config": {
        "editorHide": true, 
        "enabled": false, 
        "results": {}, 
        "editorMode": "ace/mode/markdown", 
        "fontSize": 9.0, 
        "tableHide": false, 
        "editorSetting": {
          "completionKey": "TAB", 
          "editOnDblClick": true, 
          "completionSupport": false, 
          "language": "markdown"
        }, 
        "colWidth": 12.0
      }, 
      "id": "20181204-010201_619332144", 
      "progressUpdateIntervalMs": 500
    }, 
    {
      "status": "READY", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%splicemachine\n\ncreate table DEV.etl_example(\n        CUSTOMERID  varchar(150),\n        gender varchar(50),\n        SeniorCitizen boolean,\n        Partner varchar(150),\n        Dependents varchar(150),\n        tenure int,\n        PhoneService varchar(150),\n        MultipleLines varchar(150),\n        InternetService varchar(150),\n        OnlineSecurity varchar(150),\n        OnlineBackup varchar(150),\n        DeviceProtection varchar(150),\n        TechSupport varchar(150),\n        StreamingTV varchar(150),\n        StreamingMovies varchar(150),\n        Contract varchar(150),\n        PaperlessBilling varchar(150),\n        PaymentMethod varchar(150),\n        MonthlyCharges double,\n        TotalCharges double,\n        Churn varchar(150));\n", 
      "apps": [], 
      "results": {
        "code": "SUCCESS"
      }, 
      "jobName": "paragraph_1543885360440_-2015400997", 
      "user": "anonymous", 
      "dateUpdated": "2018-12-04 01:06:02.905", 
      "dateCreated": "2018-12-04 01:02:40.440", 
      "config": {
        "enabled": true, 
        "results": {}, 
        "editorMode": "ace/mode/sql", 
        "fontSize": 9.0, 
        "editorSetting": {
          "editOnDblClick": false, 
          "completionSupport": false, 
          "language": "sql"
        }, 
        "colWidth": 12.0
      }, 
      "id": "20181204-010240_1927915105", 
      "progressUpdateIntervalMs": 500
    }, 
    {
      "status": "READY", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%spark.pyspark\n\nsplice = PySpliceContext('jdbc:splice://localhost:1527/splicedb;user=splice;password=admin', sqlContext)\n\nsplice.insert(telcoDF, 'DEV.etl_example')", 
      "apps": [], 
      "results": {
        "code": "SUCCESS"
      }, 
      "jobName": "paragraph_1543885398082_2018058749", 
      "user": "anonymous", 
      "dateUpdated": "2018-12-04 01:06:11.668", 
      "dateCreated": "2018-12-04 01:03:18.082", 
      "config": {
        "enabled": true, 
        "results": {}, 
        "editorMode": "ace/mode/python", 
        "fontSize": 9.0, 
        "editorSetting": {
          "completionKey": "TAB", 
          "editOnDblClick": false, 
          "completionSupport": true, 
          "language": "python"
        }, 
        "colWidth": 12.0
      }, 
      "id": "20181204-010318_2133993757", 
      "progressUpdateIntervalMs": 500
    }, 
    {
      "status": "READY", 
      "dateFinished": "2018-12-04 01:06:20.035", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%splicemachine\n\nselect * from DEV.etl_example;", 
      "errorMessage": "", 
      "apps": [], 
      "jobName": "paragraph_1543885394951_1829304090", 
      "user": "anonymous", 
      "dateStarted": "2018-12-04 01:06:16.867", 
      "dateUpdated": "2018-12-04 01:06:33.215", 
      "dateCreated": "2018-12-04 01:03:14.951", 
      "config": {
        "enabled": true, 
        "results": {
          "0": {
            "graph": {
              "commonSetting": {}, 
              "optionOpen": false, 
              "setting": {
                "table": {
                  "updated": false, 
                  "tableGridState": {}, 
                  "tableColumnTypeState": {
                    "updated": false, 
                    "names": {
                      "SENIORCITIZEN": "string", 
                      "DEVICEPROTECTION": "string", 
                      "MONTHLYCHARGES": "string", 
                      "ONLINEBACKUP": "string", 
                      "MULTIPLELINES": "string", 
                      "GENDER": "string", 
                      "STREAMINGTV": "string", 
                      "PAYMENTMETHOD": "string", 
                      "CONTRACT": "string", 
                      "STREAMINGMOVIES": "string", 
                      "PAPERLESSBILLING": "string", 
                      "CHURN": "string", 
                      "PHONESERVICE": "string", 
                      "TECHSUPPORT": "string", 
                      "TENURE": "string", 
                      "PARTNER": "string", 
                      "DEPENDENTS": "string", 
                      "INTERNETSERVICE": "string", 
                      "ONLINESECURITY": "string", 
                      "CUSTOMERID": "string", 
                      "TOTALCHARGES": "string"
                    }
                  }, 
                  "tableOptionValue": {
                    "showPagination": false, 
                    "useFilter": false, 
                    "showAggregationFooter": false
                  }, 
                  "initialized": false, 
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]"
                }
              }, 
              "mode": "table", 
              "height": 300.0
            }
          }
        }, 
        "editorMode": "ace/mode/sql", 
        "fontSize": 9.0, 
        "tableHide": false, 
        "editorSetting": {
          "editOnDblClick": false, 
          "language": "sql"
        }, 
        "colWidth": 12.0
      }, 
      "id": "20181204-010314_669079733", 
      "progressUpdateIntervalMs": 500
    }, 
    {
      "status": "FINISHED", 
      "dateFinished": "2018-12-11 23:35:34.177", 
      "settings": {
        "forms": {}, 
        "params": {}
      }, 
      "text": "%md\n## Where to Go Next\nTo complete this class, please complete the exercises in the  [*Exercises for This Class*](/#/notebook/2DZ94J7Y2) notebook.\n", 
      "apps": [], 
      "results": {
        "msg": [
          {
            "data": "<div class=\"markdown-body\">\n<h2>Where to Go Next</h2>\n<p>To complete this class, please complete the exercises in the <a href=\"/#/notebook/2DZ94J7Y2\"><em>Exercises for This Class</em></a> notebook.</p>\n</div>", 
            "type": "HTML"
          }
        ], 
        "code": "SUCCESS"
      }, 
      "jobName": "paragraph_1542737973060_2140710284", 
      "user": "anonymous", 
      "dateStarted": "2018-12-11 23:35:34.132", 
      "dateUpdated": "2018-12-12 02:16:19.863", 
      "dateCreated": "2018-11-20 10:19:33.060", 
      "config": {
        "editorMode": "ace/mode/markdown", 
        "enabled": false, 
        "results": {}, 
        "editorHide": true, 
        "fontSize": 9.0, 
        "tableHide": false, 
        "editorSetting": {
          "completionKey": "TAB", 
          "editOnDblClick": true, 
          "completionSupport": false, 
          "language": "markdown"
        }, 
        "colWidth": 12.0
      }, 
      "id": "20181120-101933_827290426", 
      "progressUpdateIntervalMs": 500
    }
  ], 
  "config": {
    "looknfeel": "default", 
    "personalizedMode": "false", 
    "isZeppelinNotebookCronEnable": false
  }, 
  "id": "2DXK4FQKX"
}