{
  "paragraphs": [
    {
      "text": "%md\n\u003clink rel\u003d\"stylesheet\" href\u003d\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" /\u003e\n\n# ETL Pipeline Example\n\nThis notebook presents a simple example of an ETL pipeline that reads a dataset from a public URL, performs simple transformations, and inserts data into a Splice Machine database.\n\n### Extract\nFirst we\u0027ll extract some data from a public URL, containing historical data about Telco customers and whether they discontinued service.  This is a good dataset for demonstrating machine learning algorithms for predicting customer churn:\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-04 00:59:14.277",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003clink rel\u003d\"stylesheet\" href\u003d\"https://doc.splicemachine.com/zeppelin/css/zepstyles2.css\" /\u003e\n\u003ch1\u003eETL Pipeline Example\u003c/h1\u003e\n\u003cp\u003eThis notebook presents a simple example of an ETL pipeline that reads a dataset from a public URL, performs simple transformations, and inserts data into a Splice Machine database.\u003c/p\u003e\n\u003ch3\u003eExtract\u003c/h3\u003e\n\u003cp\u003eFirst we\u0026rsquo;ll extract some data from a public URL, containing historical data about Telco customers and whether they discontinued service. This is a good dataset for demonstrating machine learning algorithms for predicting customer churn:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542396165231_1238194394",
      "id": "20181116-192245_1346898964",
      "dateCreated": "2018-11-16 11:22:45.000",
      "dateStarted": "2018-12-04 00:59:07.862",
      "dateFinished": "2018-12-04 00:59:10.833",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\nimport urllib2\nfrom io import StringIO\nimport csv\nfrom pyspark.sql.types import *\n\n#get file\nurl \u003d \"https://community.watsonanalytics.com/wp-content/uploads/2015/03/WA_Fn-UseC_-Telco-Customer-Churn.csv?cm_mc_uid\u003d93701979699314920973859\u0026cm_mc_sid_50200000\u003d1492097385\u0026cm_mc_sid_52640000\u003d1492097385\"\nresponse \u003d urllib2.urlopen(url)\ntelcoText \u003d csv.reader(response)\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-04 01:05:25.231",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 9.0,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1542396141142_1804321142",
      "id": "20170413-100458_275811262",
      "dateCreated": "2018-11-16 11:22:21.000",
      "dateStarted": "2018-12-04 01:05:16.644",
      "dateFinished": "2018-12-04 01:05:17.184",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Transform\n\nNext we\u0027ll do some transformation of the data stream.  In this case we are doing some simple data cleansing and type conversions, and adding an additional column whose value is a function of other data in the existing columns:",
      "user": "anonymous",
      "dateUpdated": "2018-12-04 01:05:33.135",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eTransform\u003c/h3\u003e\n\u003cp\u003eNext we\u0026rsquo;ll do some transformation of the data stream. In this case we are doing some simple data cleansing and type conversions, and adding an additional column whose value is a function of other data in the existing columns:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543885167312_-1301214618",
      "id": "20181204-005927_1230178969",
      "dateCreated": "2018-12-04 00:59:27.313",
      "dateStarted": "2018-12-04 01:00:51.786",
      "dateFinished": "2018-12-04 01:00:51.798",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n#grab header and rows\nheader \u003d telcoText.next()\nheader \u003d [name.upper() for name in header]\n#handle some missing values\nrows \u003d [row for row in telcoText if row[19] !\u003d \u0027 \u0027]\n#convert SeniorCitizen to boolean\nfor i in range(len(rows)):\n    rows[i][2] \u003d bool(int(rows[i][2]))\n    rows[i][5] \u003d int(rows[i][5])\n    rows[i][18] \u003d float(rows[i][18])\n    rows[i][19] \u003d float(rows[i][19])\n\n#get fields for schema\nfields \u003d []\nfor col in header:\n    if col \u003d\u003d \u0027SeniorCitizen\u0027:\n        t \u003d BooleanType()\n    elif col \u003d\u003d \u0027tenure\u0027:\n        t \u003d IntegerType()\n    elif col \u003d\u003d \u0027MonthlyCharges\u0027 or col\u003d\u003d\u0027TotalCharges\u0027:\n        t \u003d\u003d DoubleType()\n    else:\n        t \u003d StringType()\n    fields.append(StructField(col, t, True))\n#create schema\nschema \u003d StructType(fields)\n\n#create DF\ntelcoDF \u003d sc.parallelize(rows).toDF(schema)",
      "user": "anonymous",
      "dateUpdated": "2018-12-04 01:05:37.575",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1543885255419_648169093",
      "id": "20181204-010055_164624808",
      "dateCreated": "2018-12-04 01:00:55.419",
      "dateStarted": "2018-12-04 01:05:37.602",
      "dateFinished": "2018-12-04 01:05:39.433",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nz.show(telcoDF)\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-04 01:05:58.388",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1543885206824_-1501314020",
      "id": "20181204-010006_1922043166",
      "dateCreated": "2018-12-04 01:00:06.824",
      "dateStarted": "2018-12-04 01:05:48.033",
      "dateFinished": "2018-12-04 01:05:48.643",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Load\n\nNow that we have the data we want to load into the database, we\u0027ll define the schema and load it directly in using the Native Spark DataSource:\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-04 01:02:36.136",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eLoad\u003c/h3\u003e\n\u003cp\u003eNow that we have the data we want to load into the database, we\u0026rsquo;ll define the schema and load it directly in using the Native Spark DataSource:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543885321016_-480887096",
      "id": "20181204-010201_619332144",
      "dateCreated": "2018-12-04 01:02:01.016",
      "dateStarted": "2018-12-04 01:02:36.145",
      "dateFinished": "2018-12-04 01:02:36.156",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%splicemachine\n\ncreate table DEV.etl_example(\n        CUSTOMERID  varchar(150),\n        gender varchar(50),\n        SeniorCitizen boolean,\n        Partner varchar(150),\n        Dependents varchar(150),\n        tenure int,\n        PhoneService varchar(150),\n        MultipleLines varchar(150),\n        InternetService varchar(150),\n        OnlineSecurity varchar(150),\n        OnlineBackup varchar(150),\n        DeviceProtection varchar(150),\n        TechSupport varchar(150),\n        StreamingTV varchar(150),\n        StreamingMovies varchar(150),\n        Contract varchar(150),\n        PaperlessBilling varchar(150),\n        PaymentMethod varchar(150),\n        MonthlyCharges double,\n        TotalCharges double,\n        Churn varchar(150));\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-04 01:06:02.905",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Query executed successfully. Affected rows : 0"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1543885360440_-2015400997",
      "id": "20181204-010240_1927915105",
      "dateCreated": "2018-12-04 01:02:40.440",
      "dateStarted": "2018-12-04 01:06:02.923",
      "dateFinished": "2018-12-04 01:06:04.561",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark.pyspark\n\nsplice \u003d PySpliceContext(\u0027jdbc:splice://localhost:1527/splicedb;user\u003dsplice;password\u003dadmin\u0027, sqlContext)\n\nsplice.insert(telcoDF, \u0027DEV.etl_example\u0027)",
      "user": "anonymous",
      "dateUpdated": "2018-12-04 01:06:11.668",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1543885398082_2018058749",
      "id": "20181204-010318_2133993757",
      "dateCreated": "2018-12-04 01:03:18.082",
      "dateStarted": "2018-12-04 01:06:11.688",
      "dateFinished": "2018-12-04 01:06:13.759",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%splicemachine\n\nselect * from DEV.etl_example;",
      "user": "anonymous",
      "dateUpdated": "2018-12-04 01:06:33.215",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "CUSTOMERID": "string",
                      "GENDER": "string",
                      "SENIORCITIZEN": "string",
                      "PARTNER": "string",
                      "DEPENDENTS": "string",
                      "TENURE": "string",
                      "PHONESERVICE": "string",
                      "MULTIPLELINES": "string",
                      "INTERNETSERVICE": "string",
                      "ONLINESECURITY": "string",
                      "ONLINEBACKUP": "string",
                      "DEVICEPROTECTION": "string",
                      "TECHSUPPORT": "string",
                      "STREAMINGTV": "string",
                      "STREAMINGMOVIES": "string",
                      "CONTRACT": "string",
                      "PAPERLESSBILLING": "string",
                      "PAYMENTMETHOD": "string",
                      "MONTHLYCHARGES": "string",
                      "TOTALCHARGES": "string",
                      "CHURN": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/sql",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1543885394951_1829304090",
      "id": "20181204-010314_669079733",
      "dateCreated": "2018-12-04 01:03:14.951",
      "dateStarted": "2018-12-04 01:06:16.867",
      "dateFinished": "2018-12-04 01:06:20.035",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Where to Go Next\nTo complete this class, please complete the exercises in the  [*Exercises for This Class*](/#/notebook/2DZ94J7Y2) notebook.\n",
      "user": "anonymous",
      "dateUpdated": "2018-12-12 02:16:19.863",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorHide": false,
        "editorMode": "ace/mode/markdown",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eWhere to Go Next\u003c/h2\u003e\n\u003cp\u003eTo complete this class, please complete the exercises in the \u003ca href\u003d\"/#/notebook/2DZ94J7Y2\"\u003e\u003cem\u003eExercises for This Class\u003c/em\u003e\u003c/a\u003e notebook.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1542737973060_2140710284",
      "id": "20181120-101933_827290426",
      "dateCreated": "2018-11-20 10:19:33.060",
      "dateStarted": "2018-12-11 23:35:34.132",
      "dateFinished": "2018-12-11 23:35:34.177",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Splice Machine Training / For Developers, Part II / k. ETL Pipeline Example",
  "id": "2DXK4FQKX",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}